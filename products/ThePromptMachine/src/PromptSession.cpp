/*
    PromptSession.cpp

    
///
/// CBTek LLC ("COMPANY") CONFIDENTIAL
/// Copyright (c) 2016 CBTek, All Rights Reserved.
///
/// NOTICE:  All information contained herein is, and remains the property of COMPANY. The intellectual and technical concepts contained
/// herein are proprietary to COMPANY and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained
/// from COMPANY.  Access to the source code contained herein is hereby forbidden to anyone except current COMPANY employees, managers or contractors who have executed
/// Confidentiality and Non-disclosure agreements explicitly covering such access.
///
/// The copyright notice above does not evidence any actual or intended publication or disclosure  of  this source code, which includes
/// information that is confidential and/or proprietary, and is a trade secret, of  COMPANY.   ANY REPRODUCTION, MODIFICATION, DISTRIBUTION, PUBLIC  PERFORMANCE,
/// OR PUBLIC DISPLAY OF OR THROUGH USE  OF THIS  SOURCE CODE  WITHOUT  THE EXPRESS WRITTEN CONSENT OF COMPANY IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE
/// LAWS AND INTERNATIONAL TREATIES.  THE RECEIPT OR POSSESSION OF  THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS
/// TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT  MAY DESCRIBE, IN WHOLE OR IN PART.
///

*/
//----------------------------------------
//PromptSession.cpp generated by cbtek on 10-29-2016 at 10:50:35 AM
//----------------------------------------
#include "PromptSession.h"

namespace cbtek {
namespace products {
namespace productivity {
namespace prompt_machine {


PromptSession::PromptSession()
{
    m_initialScrollSpeed = 0;
    m_timeoutSeconds = 0;
    m_textSize = 0;
}

PromptSession::~PromptSession()
{

}

void PromptSession::setText(const QString & value)
{
    m_text=value;
}

void PromptSession::setTextForegroundColor(const QColor & value)
{
    m_textForegroundColor=value;
}

void PromptSession::setTextBackgroundColor(const QColor & value)
{
    m_textBackgroundColor=value;
}

void PromptSession::setPageBackgroundColor(const QColor & value)
{
    m_pageBackgroundColor=value;
}

void PromptSession::setTextSize(int value)
{
    m_textSize=value;
}

void PromptSession::setTimeoutSeconds(int value)
{
    m_timeoutSeconds=value;
}

void PromptSession::setInitialScrollSpeed(int value)
{
    m_initialScrollSpeed=value;
}


const QString &PromptSession::getText() const
{
    return m_text;
}

const QColor &PromptSession::getTextForegroundColor() const
{
    return m_textForegroundColor;
}

const QColor &PromptSession::getTextBackgroundColor() const
{
    return m_textBackgroundColor;
}

const QColor &PromptSession::getPageBackgroundColor() const
{
    return m_pageBackgroundColor;
}

int PromptSession::getTextSize() const
{
    return m_textSize;
}

int PromptSession::getTimeoutSeconds() const
{
    return m_timeoutSeconds;
}

int PromptSession::getInitialScrollSpeed() const
{
    return m_initialScrollSpeed;
}


}}}}//end namespace


